@startuml
class User {
-String Username;
-String Password;
-Integer coins=20;

-List cardInventory;
-List deck;
}

enum Element{
Fire,
Water,
Normal
}

abstract class Card
{


-String name;
-Integer baseDamage;
-Element element;



}

class BattleManager
{

    +void battle(User player1, User player2);
}

class Main
{

}
enum CardType
{
        Monster,
        Spell
}
class TradeDeal
{



    -Integer tradeId;
    -Card cardToTrade;
    -CardType type;
    -Integer minDamage;

}


enum MonsterType
{
    Goblin,
        Wizard,
        Ork,
        Knight,
        Kraken,
        Elf,
        Dragon
}

class MonsterCard
{
+MonsterType type;
+override void describe()
}
class SpellCard
{
+override void describe()
}

class Server
{

}

class Service
{

}

class Controller
{

}



Card <|-- "extends" MonsterCard
Card <|-- "extends" SpellCard

User "owns multiple" *-- Card
Card "has one" *-- Element

MonsterCard "has one" *-- MonsterType
User "interacts with other users through" --* GameManager

Main "Starts and sets up" --* Server
Server "Communicates with" --* BattleManager

Controller "Performs actions for" --* Service
Controller *-- "Is performed by" TradeDeal
Service "Handles requests sent to" --* Server

TradeDeal "asks for a specific" --* CardType

@enduml